#!/bin/bash

# go to script directory, dont want any mishaps by running it in another folder :)
cd $(dirname $(realpath $0))

# get the path of core.asar
path() {
  case "$(uname)" in
  Darwin)
    echo "${HOME}"/Library/Application\ Support/discord/*/modules/discord_desktop_core/core.asar
    ;;
  Linux)
    echo "${HOME}"/.config/discord/*/modules/discord_desktop_core/core.asar
    ;;
  *)
    echo "Unsupported OS"
    exit 1
    ;;
  esac
}

# backup the discord core.asar in current directory to easily revert back
backup() {
  cp "$(path)" ./core.asar
}

# revert core.asar changes by copying the backup back to discord
revert() {
  if [[ -f ./core.asar ]]; then
    cp ./core.asar "$(path)"
  else
    echo "No backup was found in ./core.asar"
    exit 1
  fi
}

# src extracts the current core.asar that is injected in discord to ./discord-source for investigation
src() {
  if ! command -v asar &>/dev/null; then
    npm install -g asar
  fi
  mkdir -p ./discord-source
  _=$(asar extract "$(path)" ./discord-source/)
}

# inject will run the go installer to inject the code withing ./client/src/
cli() {
  if [[ ! -f ./core.asar ]]; then
    backup
  fi

  go run ./cmd/cli/main.go $@
}

# clean will clean the project directory up:
# - Move the backup back into discord
# - Remove the ./discord-source/ folder
clean() {
  if [[ -f ./core.asar ]]; then
    revert
    rm ./core.asar
  fi

  if [[ -d ./discord-source/ ]]; then
    rm -r ./discord-source/
  fi
}

case "$1" in
backup)
  backup
  ;;
revert)
  revert
  ;;
src)
  src
  ;;
cli)
  cli "${@:2}"
  ;;
clean)
  clean
  ;;
*)
  echo "Usage: $0 {backup|revert|src|inject|clean}"
  exit 1
  ;;
esac
